name: VICTOR

on:
  push:
    branches: [victor]
  pull_request:
    branches: [victor]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: 🔄 Checkout do código
        uses: actions/checkout@v4

      - name: 🐳 Instalar Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: 📦 Instalar dependências
        working-directory: ./apps/victor
        run: npm ci
        env:
          CI: true

      - name: � Rodar Lint
        working-directory: ./apps/victor
        run: npm run lint

      - name: 🐳 Configurar ambiente
        working-directory: ./apps/victor
        run: |
          # Cria .env temporário baseado no .env.example com valores padrão
          echo "PORT=3000" > .env
          echo "DB_HOST=localhost" >> .env
          echo "DB_PORT=5432" >> .env
          echo "DB_USER=victor_user" >> .env
          echo "DB_PASSWORD=victor_pass" >> .env
          echo "DB_DATABASE=victor_db" >> .env

      - name: 🐳 Construir imagem Docker
        working-directory: ./apps/victor
        run: docker build -t devboard-api .

      - name: 🔍 Scan de segurança com Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'devboard-api'
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true
          vuln-type: 'os,library'

      - name: 🐳 Subir containers
        working-directory: ./apps/victor
        run: docker-compose up -d --build

      - name: 🔍 Verificar saúde da API
        run: |
          sleep 10
          curl --fail http://localhost:3000/healthcheck