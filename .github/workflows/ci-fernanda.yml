name: CI - Fernanda's DevBoard

on:
  push:
    branches: [fernanda]
    paths:
      - 'apps/fernanda/**'
  pull_request:
    branches: [fernanda]
    paths:
      - 'apps/fernanda/**'
  workflow_dispatch:

jobs:
  lint-and-format:
    name: 🔍 Lint & Format Check
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: |
            apps/fernanda/backend/package-lock.json
            apps/fernanda/frontend/package-lock.json

      - name: 🔧 Install Backend Dependencies
        working-directory: apps/fernanda/backend
        run: npm ci

      - name: 🔧 Install Frontend Dependencies
        working-directory: apps/fernanda/frontend
        run: npm ci

      - name: 🧹 Lint Backend
        working-directory: apps/fernanda/backend
        run: npm run lint

      - name: 🧹 Lint Frontend
        working-directory: apps/fernanda/frontend
        run: npm run lint

      - name: 🎨 Check Backend Format
        working-directory: apps/fernanda/backend
        run: npm run format:check

      - name: 🎨 Check Frontend Format
        working-directory: apps/fernanda/frontend
        run: npm run format:check

  build-and-test:
    name: 🏗️ Build & Test
    runs-on: ubuntu-latest
    needs: lint-and-format

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🏗️ Build Backend Image
        working-directory: apps/fernanda
        run: |
          docker build -t devboard-fernanda-backend:ci ./backend

      - name: 🏗️ Build Frontend Image
        working-directory: apps/fernanda
        run: |
          docker build -t devboard-fernanda-frontend:ci ./frontend

      - name: 📋 List Built Images
        run: docker images | grep devboard-fernanda

  integration-test:
    name: 🧪 Integration Test
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Create .env for CI
        working-directory: apps/fernanda
        run: |
          cp .env.example .env
          echo "NODE_ENV=production" >> .env

      - name: 🚀 Start Services
        working-directory: apps/fernanda
        run: |
          docker compose up -d --build
          echo "Waiting for services to start..."
          sleep 30

      - name: 🔍 Check Services Status
        working-directory: apps/fernanda
        run: |
          docker compose ps
          docker compose logs

      - name: 🏥 Test Backend Health
        run: |
          echo "Testing backend healthcheck..."
          curl -f http://localhost:3000/healthcheck || exit 1
          echo "✅ Backend healthcheck passed!"

      - name: 🌐 Test Frontend
        run: |
          echo "Testing frontend availability..."
          curl -f http://localhost:8080 || exit 1
          echo "✅ Frontend is accessible!"

      - name: 🧪 Run API Tests
        working-directory: apps/fernanda
        run: |
          chmod +x scripts/test-api.sh
          ./scripts/test-api.sh

      - name: 🧹 Cleanup
        if: always()
        working-directory: apps/fernanda
        run: |
          docker compose down -v
          docker system prune -f

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🏗️ Build Backend Image for Scanning
        working-directory: apps/fernanda
        run: |
          docker build -t devboard-fernanda-backend:security-scan ./backend

      - name: 🏗️ Build Frontend Image for Scanning
        working-directory: apps/fernanda
        run: |
          docker build -t devboard-fernanda-frontend:security-scan ./frontend

      - name: 🔍 Run Trivy Security Scan - Backend
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'devboard-fernanda-backend:security-scan'
          format: 'sarif'
          output: 'trivy-backend-results.sarif'

      - name: 🔍 Run Trivy Security Scan - Frontend
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'devboard-fernanda-frontend:security-scan'
          format: 'sarif'
          output: 'trivy-frontend-results.sarif'

      - name: 📊 Upload Trivy Scan Results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-backend-results.sarif'

      - name: 📊 Upload Frontend Trivy Scan Results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-frontend-results.sarif'

      - name: 🔍 Run Trivy Security Scan - Backend (Table Format)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'devboard-fernanda-backend:security-scan'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: 🔍 Run Trivy Security Scan - Frontend (Table Format)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'devboard-fernanda-frontend:security-scan'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
