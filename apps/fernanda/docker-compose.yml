services:
  postgres:
    image: postgres:15-alpine
    container_name: devboard-fernanda-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - devboard-fernanda-postgres-data:/var/lib/postgresql/data
      - ./infra/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - devboard-fernanda-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: devboard-fernanda-backend
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    ports:
      - "3000:3000"
    networks:
      - devboard-fernanda-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: devboard-fernanda-frontend
    ports:
      - "8080:80"
    networks:
      - devboard-fernanda-network
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  devboard-fernanda-postgres-data:
    name: devboard-fernanda-postgres-data

networks:
  devboard-fernanda-network:
    name: devboard-fernanda-network
